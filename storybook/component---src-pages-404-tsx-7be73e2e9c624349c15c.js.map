{"version":3,"file":"component---src-pages-404-tsx-7be73e2e9c624349c15c.js","mappings":"yKAIO,MAAMA,EAGR,EAAGC,OAAMC,aAAc,IAAD,EACzB,OACEC,EAAAA,cAAAA,MAAAA,CAAKC,UCPU,ODQbD,EAAAA,cAAAA,MAAAA,CAAKC,UCTW,QDUZH,SAAW,QAAP,EAAJA,EAAMI,aAAK,WAAP,EAAJC,EAAaC,OAAsBC,KAAI,CAACC,EAAiBC,IAClDP,EAAAA,cAACQ,EAAAA,EAAQ,CAACF,KAAMA,EAAMC,EAAGA,EAAGE,IAAKF,EAAGR,OAAQA,OAGnD,C,0HEcV,MAnBgE,EAAGD,WACjE,MAAM,cAAEY,IAAkBC,EAAAA,EAAAA,KAC1B,OACEX,EAAAA,cAACY,EAAAA,EAAM,CAACC,SAAS,YACfb,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,uBACbD,EAAAA,cAAAA,UAAAA,CAASC,UCXS,ODYhBD,EAAAA,cAAAA,KAAAA,CAAIC,UCfS,ODeoB,OACjCD,EAAAA,cAAAA,IAAAA,CAAGC,UCfiB,ODeoBS,EAAc,mBACtDV,EAAAA,cAACc,EAAAA,EAAI,CAACC,GAAG,IAAId,UCfA,ODgBVS,EAAc,qBAInBV,EAAAA,cAACH,EAAAA,EAAQ,CAACC,KAAMA,KAEX,C","sources":["webpack://ghost-casper/./src/components/Sections/PostFeed/PostFeed.tsx","webpack://ghost-casper/./src/components/Sections/PostFeed/PostFeed.module.scss","webpack://ghost-casper/./src/pages/404.tsx","webpack://ghost-casper/./src/pages/styles/404.module.scss"],"sourcesContent":["import * as React from 'react';\nimport PostCard from '../PostCard/PostCard';\nimport * as styles from './PostFeed.module.scss';\n\nexport const PostFeed: React.FC<{\n  data: Queries.IndexQuery | Queries.NotFoundQuery | Queries.AuthorQuery | Queries.TagQuery;\n  isHome?: boolean;\n}> = ({ data, isHome }) => {\n  return (\n    <div className={styles.posts}>\n      <div className={styles.postFeed}>\n        {(data?.posts?.nodes as Post_Type[]).map((post: Post_Type, i: number) => {\n          return <PostCard post={post} i={i} key={i} isHome={isHome} />;\n        })}\n      </div>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport var postFeed = \"h_C\";\nexport var posts = \"h_B\";","import * as React from 'react';\n//import * as PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\nimport useIntlHelper from '~src/_i18n/helpers/useIntlHelper';\nimport Layout from '~src/components/Layout/Layout';\nimport Link from '~src/_i18n/components/Link';\nimport { PostFeed } from '~src/components/Sections/PostFeed/PostFeed';\n\nimport * as styles from './styles/404.module.scss';\n\nconst NotFoundPage: React.FC<{ data: Queries.NotFoundQuery }> = ({ data }) => {\n  const { formatMessage } = useIntlHelper();\n  return (\n    <Layout template=\"notfound\">\n      <div className=\"inner error-content\">\n        <section className={styles.errorMessage}>\n          <h1 className={styles.errorCode}>404</h1>\n          <p className={styles.errorDescription}>{formatMessage('notFound.title')}</p>\n          <Link to=\"/\" className={styles.errorLink}>\n            {formatMessage('notFound.goBack')}\n          </Link>\n        </section>\n\n        <PostFeed data={data} />\n      </div>\n    </Layout>\n  );\n};\n\nexport default NotFoundPage;\n\nexport const notFoundQuery = graphql`\n  query NotFound {\n    posts: allMdx(sort: { frontmatter: { date: DESC } }, limit: 3, filter: { frontmatter: { category: { ne: \"Page\" } } }) {\n      nodes {\n        frontmatter {\n          date(formatString: \"DD MMMM YYYY\")\n          title\n          tags\n          image {\n            childImageSharp {\n              gatsbyImageData(layout: FULL_WIDTH, placeholder: TRACED_SVG)\n            }\n          }\n          authors {\n            yamlId\n            avatar {\n              childImageSharp {\n                gatsbyImageData(layout: FULL_WIDTH, placeholder: TRACED_SVG)\n              }\n            }\n          }\n        }\n        fields {\n          locale\n          slug\n        }\n        excerpt(pruneLength: 200)\n        timeToRead\n      }\n    }\n  }\n`;\n","// extracted by mini-css-extract-plugin\nexport var errorCode = \"d_q\";\nexport var errorDescription = \"d_r\";\nexport var errorLink = \"d_s\";\nexport var errorMessage = \"d_p\";"],"names":["PostFeed","data","isHome","React","className","posts","_data$posts","nodes","map","post","i","PostCard","key","formatMessage","useIntlHelper","Layout","template","Link","to"],"sourceRoot":""}