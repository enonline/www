{"version":3,"file":"component---src-templates-page-tsx-content-file-path-c-users-mohsen-desktop-dev-dev-starters-ghost-starter-www-pages-fa-about-md-3f7b2775a392ab5e8697.js","mappings":"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","sources":["webpack://ghost-casper/./www/pages/fa/about.md","webpack://ghost-casper/./src/templates/page.tsx","webpack://ghost-casper/./src/components/Sections/MarkdownContent/MarkdownContent.tsx","webpack://ghost-casper/./src/_i18n/components/mdxLink.tsx","webpack://ghost-casper/./src/components/Sections/MarkdownContent/MarkdownContent.module.scss","webpack://ghost-casper/./src/templates/styles/Post.module.scss","webpack://ghost-casper/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    blockquote: \"blockquote\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"درباره ما فارسی\"), \"\\n\", React.createElement(_components.blockquote, null, \"\\n\", React.createElement(_components.p, null, \"If you'd like to set up a site like this for yourself, head over to \", React.createElement(_components.a, {\n    href: \"https://ghost.org\"\n  }, \"Ghost.org\"), \" and start a free 14 day trial to give Ghost a try!\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"If you're a developer: Ghost is a completely open source (MIT) Node.js application built on a JSON API with an Ember.js admin client. It works with MySQL and SQLite, and is publicly available \", React.createElement(_components.a, {\n    href: \"https://github.com/TryGhost/ghost\"\n  }, \"on Github\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"If you need help with using Ghost, you'll find a ton of useful articles on \", React.createElement(_components.a, {\n    href: \"https://ghost.org/faq/\"\n  }, \"FAQs\"), \", as well as extensive \", React.createElement(_components.a, {\n    href: \"https://ghost.org/docs/\"\n  }, \"developer documentation\"), \".\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"C:/Users/Mohsen/Desktop/Dev/_dev/_starters/ghost-starter/www/pages/fa/about.md\";\nimport * as React from 'react';\nimport Layout from '~src/components/Layout/Layout';\nimport {MarkdownContent} from '~src/components/Sections/MarkdownContent/MarkdownContent';\nimport * as styles from './styles/Post.module.scss';\nconst PageTemplate = ({data, children}) => {\n  return React.createElement(Layout, {\n    template: \"page\",\n    data: data\n  }, React.createElement(\"div\", {\n    className: \"inner\"\n  }, React.createElement(\"article\", {\n    className: ''\n  }, React.createElement(\"header\", {\n    className: styles.postFullHeader\n  }, React.createElement(\"h1\", {\n    className: styles.postFullTitle\n  }, data.page.frontmatter.title)), React.createElement(MarkdownContent, null, children))));\n};\nPageTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(PageTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst PageTemplateQuery = \"1120669009\";\n","import * as React from 'react';\nimport { MDXProvider } from '@mdx-js/react';\nimport MdxLink from '~src/_i18n/components/mdxLink';\nimport * as styles from './MarkdownContent.module.scss';\n\n// Provide custom components for markdown elements\nconst components = {\n  a: MdxLink,\n\n  //h1: props => <h1 style={{ color: 'tomato' }} {...props} />,\n  //Demo: () => <h1>This is a demo component</h1>,\n};\nexport const MarkdownContent: React.FC<{ children: React.ReactNode }> = ({ children }) => {\n  return (\n    <section className={styles.postFullContent}>\n      <div className={styles.postContent}>\n        <MDXProvider components={components}>{children}</MDXProvider>\n      </div>\n    </section>\n  );\n};\n","import * as React from 'react';\nimport LocalizedLink from './localizedLink';\n\nconst isHash = (str: string) => /^#/.test(str);\nconst isInternal = (to: string) => /^\\/(?!\\/)/.test(to);\nconst isStatic = (to: string) => /^\\/static/.test(to);\n\n// Only use <LocalizedLink /> for internal links\nconst MdxLink = ({ href, ...props }) =>\n  isHash(href) || !isInternal(href) || isStatic(href) ? (\n    <a href={href} target=\"_blank\" rel=\"noopener noreferrer\" {...props} />\n  ) : (\n    <LocalizedLink {...props} to={href} />\n  );\n\nexport default MdxLink;\n","// extracted by mini-css-extract-plugin\nexport var postContent = \"n_bN\";\nexport var postFullContent = \"n_bP\";","// extracted by mini-css-extract-plugin\nexport var authorList = \"f_D\";\nexport var bull = \"f_G\";\nexport var kgCodeCard = \"f_J\";\nexport var kgWidthFull = \"f_H\";\nexport var postFullByline = \"f_B\";\nexport var postFullBylineContent = \"f_C\";\nexport var postFullBylineMeta = \"f_F\";\nexport var postFullCustomExcerpt = \"f_y\";\nexport var postFullHeader = \"f_t\";\nexport var postFullImage = \"f_z\";\nexport var postFullMetaDate = \"f_w\";\nexport var postFullTags = \"f_v\";\nexport var postFullTitle = \"f_x\";","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  let allComponents = useMDXComponents(components)\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","blockquote","a","_provideComponents","components","React","href","wrapper","MDXLayout","PageTemplate","data","children","Layout","template","className","styles","page","frontmatter","title","MarkdownContent","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","test","to","isStatic","target","rel","LocalizedLink","MDXProvider","kgCodeCard","kgWidthFull","postFullByline","postFullBylineContent","postFullBylineMeta","postFullCustomExcerpt","postFullHeader","postFullImage","postFullMetaDate","postFullTags","postFullTitle","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}